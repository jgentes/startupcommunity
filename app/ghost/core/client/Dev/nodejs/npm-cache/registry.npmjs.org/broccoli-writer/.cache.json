{"_id":"broccoli-writer","_rev":"4-6191f82faa4915d760c6f2dcede7499b","name":"broccoli-writer","description":"Helper base class for Broccoli plugins that write output files","dist-tags":{"latest":"0.1.1"},"versions":{"0.1.0":{"name":"broccoli-writer","description":"Helper base class for Broccoli plugins that write output files","version":"0.1.0","author":{"name":"Jo Liss","email":"joliss42@gmail.com"},"main":"index.js","license":"MIT","repository":{"type":"git","url":"https://github.com/joliss/broccoli-writer"},"keywords":["broccoli-helper"],"dependencies":{"quick-temp":"^0.1.0","rsvp":"^3.0.6"},"bugs":{"url":"https://github.com/joliss/broccoli-writer/issues"},"homepage":"https://github.com/joliss/broccoli-writer","_id":"broccoli-writer@0.1.0","dist":{"shasum":"a6d4cc0a70c9d1e695c224a89933921e158c6d08","tarball":"http://registry.npmjs.org/broccoli-writer/-/broccoli-writer-0.1.0.tgz"},"_from":".","_npmVersion":"1.4.4","_npmUser":{"name":"joliss","email":"joliss42@gmail.com"},"maintainers":[{"name":"joliss","email":"joliss42@gmail.com"}],"directories":{}},"0.1.1":{"name":"broccoli-writer","description":"Helper base class for Broccoli plugins that write output files","version":"0.1.1","author":{"name":"Jo Liss","email":"joliss42@gmail.com"},"main":"index.js","license":"MIT","repository":{"type":"git","url":"https://github.com/joliss/broccoli-writer"},"keywords":["broccoli-helper"],"dependencies":{"quick-temp":"^0.1.0","rsvp":"^3.0.6"},"bugs":{"url":"https://github.com/joliss/broccoli-writer/issues"},"homepage":"https://github.com/joliss/broccoli-writer","_id":"broccoli-writer@0.1.1","dist":{"shasum":"d4d71aa8f2afbc67a3866b91a2da79084b96ab2d","tarball":"http://registry.npmjs.org/broccoli-writer/-/broccoli-writer-0.1.1.tgz"},"_from":".","_npmVersion":"1.4.4","_npmUser":{"name":"joliss","email":"joliss42@gmail.com"},"maintainers":[{"name":"joliss","email":"joliss42@gmail.com"}],"directories":{}}},"readme":"# broccoli-writer\n\nBase class for Broccoli plugins that write an output tree. Most plugins fall\ninto this category (the exception being plugins that just point at an existing\ndirectory on the file system, like broccoli-bower), so they will be\nimplemented either using this base class or using a derived, more specific\nbase class.\n\nThis base class's main purpose is to create and clean up the temporary output\ndirectory for you.\n\n## Installation\n\n```\nnpm --save broccoli-writer\n```\n\n## Usage\n\nWrite your plugin like so:\n\n```js\nvar Writer = require('broccoli-writer');\n\nmodule.exports = MyCompiler;\nMyCompiler.prototype = Object.create(Writer.prototype);\nMyCompiler.prototype.constructor = MyCompiler;\nfunction MyCompiler (arg1, arg2, ...) {\n  if (!(this instanceof MyCompiler)) return new MyCompiler(arg1, arg2, ...);\n  ...\n};\n\nMyCompiler.prototype.write = function (readTree, destDir) {\n  ...\n};\n```\n\nInside `MyCompiler.prototype.write`, `readTree` is [supplied by\nBroccoli](https://github.com/joliss/broccoli#plugin-api-specification) -- call\n`readTree(someInputTree)` to read another tree. `destDir` is the path to a\nnewly-created temporary directory created by the `Writer` base class. Place\nall the output files you wish to generate in this directory.\n\nIf you want to do something asynchronous, return a promise that resolves when\nyou are done.\n\nIn the `MyCompiler` constructor, you don't need to call the `Writer` base\nclass constructor.\n\nYour plugin can be used in `Brocfile.js` like so:\n\n```js\nvar compileSomething = require('broccoli-my-compiler');\n\nvar outputTree = compileSomething(arg1, arg2, ...)\n```\n","maintainers":[{"name":"joliss","email":"joliss42@gmail.com"}],"time":{"modified":"2014-04-02T09:15:58.583Z","created":"2014-04-02T09:07:42.554Z","0.1.0":"2014-04-02T09:07:42.554Z","0.1.1":"2014-04-02T09:15:58.583Z"},"homepage":"https://github.com/joliss/broccoli-writer","keywords":["broccoli-helper"],"repository":{"type":"git","url":"https://github.com/joliss/broccoli-writer"},"author":{"name":"Jo Liss","email":"joliss42@gmail.com"},"bugs":{"url":"https://github.com/joliss/broccoli-writer/issues"},"license":"MIT","readmeFilename":"README.md","_attachments":{},"_etag":"\"5PH9OCZH5PNA6BSGD7J80FFJ9\""}