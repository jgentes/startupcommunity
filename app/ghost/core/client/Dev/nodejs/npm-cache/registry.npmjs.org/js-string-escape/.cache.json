{"_id":"js-string-escape","_rev":"10-3dfbb6ec8f207fb26edeaa811eab6bcb","name":"js-string-escape","description":"Escape strings for use as JavaScript string literals","dist-tags":{"latest":"1.0.0"},"versions":{"0.0.1":{"name":"js-string-escape","version":"0.0.1","description":"Escape strings for use as JavaScript string literals","main":"index.js","scripts":{"test":"tap test"},"repository":{"type":"git","url":"https://github.com/joliss/js-string-escape"},"keywords":["string","escape","backslash","javascript","ecmascript"],"author":{"name":"Jo Liss","email":"joliss42@gmail.com"},"license":"MIT","devDependencies":{"tap":"latest"},"_id":"js-string-escape@0.0.1","dist":{"shasum":"e098f003cf2784bde004fd51a21f728a37e262e7","tarball":"http://registry.npmjs.org/js-string-escape/-/js-string-escape-0.0.1.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"joliss","email":"joliss42@gmail.com"},"maintainers":[{"name":"joliss","email":"joliss42@gmail.com"}],"directories":{}},"1.0.0":{"name":"js-string-escape","version":"1.0.0","description":"Escape strings for use as JavaScript string literals","main":"index.js","scripts":{"test":"tap test"},"repository":{"type":"git","url":"https://github.com/joliss/js-string-escape"},"keywords":["string","escape","backslash","javascript","ecmascript"],"author":{"name":"Jo Liss","email":"joliss42@gmail.com"},"contributors":[{"name":"Mathias Bynens","url":"http://mathiasbynens.be/"}],"license":"MIT","devDependencies":{"tap":"~> 0.4.2","punycode":"~> 1.2.1"},"engines":{"node":">= 0.8"},"bugs":{"url":"https://github.com/joliss/js-string-escape/issues"},"_id":"js-string-escape@1.0.0","dist":{"shasum":"d2d2365fd2e6b3948b8374ac7628ac0e84d00002","tarball":"http://registry.npmjs.org/js-string-escape/-/js-string-escape-1.0.0.tgz"},"_from":".","_npmVersion":"1.2.25","_npmUser":{"name":"joliss","email":"joliss42@gmail.com"},"maintainers":[{"name":"joliss","email":"joliss42@gmail.com"}],"directories":{}}},"readme":"# js-string-escape\n\n[![Build Status](https://travis-ci.org/joliss/js-string-escape.png?branch=master)](https://travis-ci.org/joliss/js-string-escape)\n\nEscape any string to be a valid JavaScript string literal between double\nquotes or single quotes.\n\n## Installation\n\n```\nnpm install js-string-escape\n```\n\n## Example\n\nIf you need to generate JavaScript output, this library will help you safely\nput arbitrary data in JavaScript strings:\n\n```js\njsStringEscape = require('js-string-escape')\n\nconsole.log('\"' + jsStringEscape('Quotes (\\\", \\'), newlines (\\n), etc.') + '\"')\n// => \"Quotes (\\\", \\'), newlines (\\n), etc.\"\n```\n\nIn other words, given any string `s`, the following invariants hold:\n\n```js\neval('\"' + jsStringEscape(s) + '\"') === s\neval(\"'\" + jsStringEscape(s) + \"'\") === s\n```\n\nThese `eval` expressions are safe with untrusted strings `s`.\n\nNon-strings will be cast to strings.\n\n## Compliance\n\nThis library has been checked against [ECMAScript\n5.1](http://www.ecma-international.org/ecma-262/5.1/#sec-7.8.4) and tested\nagainst all Unicode code points.\n\nNote that the returned string is not necessarily valid JSON, since JSON\ndisallows control characters, and `\\'` is illegal in JSON.\n","maintainers":[{"name":"joliss","email":"joliss42@gmail.com"}],"time":{"modified":"2015-03-20T07:08:26.070Z","created":"2013-05-12T21:23:39.920Z","0.0.1":"2013-05-12T21:23:41.390Z","1.0.0":"2013-06-17T17:33:46.185Z"},"author":{"name":"Jo Liss","email":"joliss42@gmail.com"},"repository":{"type":"git","url":"https://github.com/joliss/js-string-escape"},"users":{"sarfarazsajjad":true,"kogai":true},"keywords":["string","escape","backslash","javascript","ecmascript"],"contributors":[{"name":"Mathias Bynens","url":"http://mathiasbynens.be/"}],"bugs":{"url":"https://github.com/joliss/js-string-escape/issues"},"license":"MIT","readmeFilename":"README.md","_attachments":{},"_etag":"\"9I9ALRHVDNPG9LEK7BX1O0L8Q\""}